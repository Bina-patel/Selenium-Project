<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-8S1FK83A" failures="0" tests="8" name="Default test" time="0.179" errors="0" timestamp="2023-01-16T18:44:06 EST">
  <testcase classname="com.testing.TestFile" name="@BeforeMethod beforeMethod" time="0.055">
    <failure type="java.lang.IllegalStateException" message="The driver executable does not exist: C:\Users\binap\eclipse-workspace\Final_Project_Selenium\Project_Data\drivers\chromedriver.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\Users\binap\eclipse-workspace\Final_Project_Selenium\Project_Data\drivers\chromedriver.exe
at com.google.common.base.Preconditions.checkState(Preconditions.java:534)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:136)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:131)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:32)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:339)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:124)
at com.testing.LoginPageFile.openBrowser(LoginPageFile.java:22)
at com.testing.TestFile.beforeMethod(TestFile.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.testing.TestFile" name="@AfterMethod afterMethod" time="-1.673912646573E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.testing.TestFile" name="@BeforeMethod beforeMethod" time="-1.673912646582E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.testing.TestFile" name="@AfterMethod afterMethod" time="-1.673912646594E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.testing.TestFile" name="@BeforeMethod beforeMethod" time="-1.673912646597E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.testing.TestFile" name="@AfterMethod afterMethod" time="-1.673912646605E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.testing.TestFile" name="@BeforeMethod beforeMethod" time="-1.673912646606E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.testing.TestFile" name="@AfterMethod afterMethod" time="-1.673912646612E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.testing.TestFile" name="@BeforeMethod beforeMethod" time="-1.673912646614E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.testing.TestFile" name="@AfterMethod afterMethod" time="-1.673912646619E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.testing.TestFile" name="@BeforeMethod beforeMethod" time="-1.673912646621E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.testing.TestFile" name="@AfterMethod afterMethod" time="-1.673912646627E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.testing.TestFile" name="@BeforeMethod beforeMethod" time="-1.673912646628E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.testing.TestFile" name="@AfterMethod afterMethod" time="-1.673912646633E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.testing.TestFile" name="@BeforeMethod beforeMethod" time="-1.673912646633E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.testing.TestFile" name="@AfterMethod afterMethod" time="-1.673912646637E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.testing.TestFile" name="invalidEmailTest" time="0.0">
    <skipped/>
  </testcase> <!-- invalidEmailTest -->
  <testcase classname="com.testing.TestFile" name="noEmailAndPhoneTest" time="0.0">
    <skipped/>
  </testcase> <!-- noEmailAndPhoneTest -->
  <testcase classname="com.testing.TestFile" name="correctEmailPasswordTest" time="0.0">
    <skipped/>
  </testcase> <!-- correctEmailPasswordTest -->
  <testcase classname="com.testing.TestFile" name="correctEmailInvalidPassTest" time="0.0">
    <skipped/>
  </testcase> <!-- correctEmailInvalidPassTest -->
  <testcase classname="com.testing.TestFile" name="countMailFirstPageTest" time="0.0">
    <skipped/>
  </testcase> <!-- countMailFirstPageTest -->
  <testcase classname="com.testing.TestFile" name="countTotalMailsTest" time="0.0">
    <skipped/>
  </testcase> <!-- countTotalMailsTest -->
  <testcase classname="com.testing.TestFile" name="selectOneMailTest" time="0.0">
    <skipped/>
  </testcase> <!-- selectOneMailTest -->
  <testcase classname="com.testing.TestFile" name="readToUnreadFileTest" time="0.0">
    <skipped/>
  </testcase> <!-- readToUnreadFileTest -->
</testsuite> <!-- Default test -->
